<?xml version="1.0"?>

<project name="lwjgl native code, linux" basedir="../../bin/lwjgles" default="compile">
	<property name="native" location="../../src/native"/>
	<property name="libnamearm" value="liblwjglarm.so"/>
	<property name="lib_folder" value="${lwjgl.lib}/linux"/>
	<property name="libsarm" value="-L${lib_folder} -lEGL -L/usr/X11R6/lib -L/usr/X11/lib -lm -lX11 -lXext -lXcursor -lXrandr -lXxf86vm -lpthread -L${java.home}/lib/arm -ljawt" />	
	<property name="cflags32" value="-O2 -Wall -c -fPIC -std=c99 -Wunused"/>

	<target name="clean">
		<delete>
			<fileset dir="arm"/>
			<fileset dir="." includes="*.o"/>
			<fileset dir="." includes="*.so"/>
		</delete>
	</target>

    <target name="compile">
	<exec executable="uname" outputproperty="hwplatform">
		<arg value="-m"/>
	</exec>
	<condition property="cflags_pthread" value="-pthreads" else="-pthread">
		<os name="SunOS" />
	</condition>
	<condition property="version_script_flags32" value="" else="-Wl,--version-script='${native}/linux/lwjgl.map'">
			<os name="SunOS" />
	</condition>
	<property name="linker_flagsarm" value="${version_script_flags32} -shared -O2 -Wall -o ${libnamearm} ${libsarm}"/>
    	<antcall target="compilearm"/>
    </target>

    <target name="compilearm">
    	<mkdir dir="arm"/>
    	<apply dir="arm" executable="gcc" skipemptyfilesets="true" failonerror="true">
			<arg line="${cflagsarm} ${cflags_pthread}"/>
			<arg value="-I${java.home}/include"/>
			<arg value="-I${java.home}/include/linux"/>
			<arg value="-I${java.home}/../include"/>
			<arg value="-I${java.home}/../include/linux"/>
			<arg value="-I${java.home}/../include/solaris"/>
			<arg value="-I${native}/common"/>
		    <arg value="-I${native}/common/opengles"/>
			<arg value="-I${native}/linux"/>
		    <arg value="-I${native}/linux/opengles"/>
			<mapper type="glob" from="*.c" to="*.o"/>
		    <fileset dir="${native}/common" includes="*.c"/>
		    <fileset dir="${native}/common/opengles" includes="*.c"/>
		    <fileset dir="${native}/generated/openal" includes="*.c"/>
		    <fileset dir="${native}/generated/opencl" includes="*.c"/>
		    <fileset dir="${native}/generated/opengles" includes="*.c"/>
		    <fileset dir="${native}/linux" includes="*.c"/>
		    <fileset dir="${native}/linux/opengles" includes="*.c"/>
	    </apply>
		<apply dir="." parallel="true" executable="gcc" failonerror="true">
			<srcfile/>
			<arg line="${linker_flagsarm}"/>
			<fileset dir="arm" includes="*.o"/>
		</apply>
		<apply dir="." parallel="true" executable="strip" failonerror="true">
			<fileset file="${libnamearm}"/>
		</apply>
    </target>
</project>